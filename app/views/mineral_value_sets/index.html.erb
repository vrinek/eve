<p class="tip">
	Edit the mineral values to reflect the prices available to you.<br>
	Ore values are calculated in real time.<br>
	Saving mineral prices gives you a url which you can share with others.
</p>

<table id="market-prices">
  <thead>
    <tr>
      <% @minerals.each do |mineral| %>
      <th>
        <%= image_tag mineral.graphic.url(32) %>
        <%= mineral.name %>
        <%= ingame_link_to_item mineral %>
      </th>
      <% end %>
    </tr>
  </thead>
  <tbody>
    <tr>
      <% @minerals.each do |mineral| %>
      <td><%= text_field_tag "mineral-"+mineral.name, @prices[mineral.name], {:onkeyup => "updatePrices()"} %></td>
      <% end %>
    </tr>
  </tbody>
</table>

<div id="save-bar">
  <%= link_to_remote "Save these prices", {:url => {:action => 'create'}, :with => "'minerals_json='+mineralJSON()", :loading => "$('link-to-this').hide(); $('save-this').innerHTML = 'Saving...'"}, {:id => 'save-this'} %>
  <%= link_to "Link to these prices", {:key => (@mineral_value_set ? @mineral_value_set.key : nil)}, {:style => (@mineral_value_set ? '' : 'display:none'), :id => 'link-to-this'} %>
</div>

<table id="ores">
	<thead>
		<tr>
			<th></th>
			<% @minerals.each do |mineral| %>
				<th>
					<%= image_tag mineral.graphic.url(64), :size => "64x64", :title => mineral.name %>
				</th>
			<% end %>
			<th class="isk">ISK/m<span style="vertical-align: super; font-size: 12px;">3</span></th>
		</tr>
	</thead>
	<tbody>
		<% @basic_ores.each do |ore, composition| %>
		 <tr class="<%= cycle 'odd', 'even' %> ore">
			<td class="name">
				<%= ingame_link_to_item ore %>
				<%= ore.name %>
			</td>
			<% @minerals.each do |mineral| %>
				<td class="value"><%= composition[mineral] %></td>
			<% end %>
			<td id="value-of-<%= ore.id %>"></td>
		 </tr>
		<% end %>
	</tbody>
</table>

<script type="text/javascript" charset="utf-8">
	updatePrices = function(){
		<% @basic_ores.each do |ore, composition| %>
			$('value-of-<%= ore.id %>').innerHTML = ((<%= composition.collect{|mineral, quantity|
				"($('mineral-#{mineral.name}').value * #{quantity})"
			}.join(" + ") %>) / <%= ore.volume * ore.portion_size %>).toFixed(2)
		<% end %>
		
		return false;
	};

	mineralJSON = function(){
	  values = new Hash;
	  <% @minerals.each do |mineral| %>
      values.set('<%= mineral.name %>', new Number($F('mineral-<%= mineral.name %>')));
    <% end %>
	  
	  return values.toJSON();
	};
	
	updatePrices();
</script>
