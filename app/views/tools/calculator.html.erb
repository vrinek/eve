<p class="tip">
	Add new lines as you see fit to contain all items of the contract.<br>
	Results and total are calculated in real time.<br>
	The item names are not used in the calculations and are there only for your convenience.<br>
	Saving a contract gives you a url which you can share with others.
</p>

<div id="save-bar">
  <%= link_to "Save this contract", {:controller => 'contracts', :action => 'save'}, {:remote => true, 'data-with' => "'contract_json='+contractJSON()", 'data-loading' => "$('link-to-this').hide(); $('save-this').innerHTML = 'Saving...'", :id => 'save-this'} %>
  <%= link_to "Link to this contract", {:key => (@contract ? @contract.key : nil)}, {:style => (@contract ? '' : 'display:none'), :id => 'link-to-this'} %>
</div>

<ul id="calculations">
	<li id="add-new-line">
		<span class="label">Item</span>
		<span class="price">ISK</span>
		<span class="quantity">Quantity</span>
		<a href="#" onclick="addNewLine(); return false;">add new line</a>
	</li>
	<li id="total">
		<span class="label">TOTAL</span>
		<span class="result">0.00</span>
	</li>
</ul>

<script type="text/javascript" charset="utf-8">
	lastLineId = 0;
	total = 0;
	
	addNewLine = function(label, price, quantity){
	  if(label){}else{label = 'Item name'};
	  if(price){}else{price = 0};
	  if(quantity){}else{quantity = 0};
	  
		id = lastLineId + 1;
		liHTML = '<li class="calculation" id="calculation-'+id+'">\
			<span class="result">'+number_format(new Number(price * quantity), 2)+'</span>\
			<input type="text" class="label" value="'+label+'">\
			<input type="text" value="'+number_format(price, 2)+'" class="price" onkeyup="calculateResult('+id+')" onblur="numFor(this, 2)" onfocus="invNumFor(this)">\
			&times;\
			<input type="text" value="'+number_format(quantity, 0)+'" class="quantity" onkeyup="calculateResult('+id+')" onblur="numFor(this)" onfocus="invNumFor(this)">\
			=\
		</li>'
		
		$('total').insert({
			before: liHTML
		});
		$$('#calculation-'+id+' .label')[0].focus();
		lastLineId = id;
	};
	
	calculateResult = function(id){
		// recalculate the new result of the changed line
		price = $$('#calculation-'+id+' .price')[0].value.replace(/[^\d\.]/g, '');
		quantity = $$('#calculation-'+id+' .quantity')[0].value.replace(/[^\d\.]/g, '');
		newResult = new Number(price * quantity);
		$$('#calculation-'+id+' .result')[0].innerHTML = number_format(newResult, 2);
		
		recalculateTotalSum();
	};
	
	recalculateTotalSum = function(){
		// recalculate the total sum from all the lines (less error prone)
		total = 0;
		$$('li.calculation .result').each(function(result){
			total = total + new Number(result.innerHTML.replace(/[^\d\.]/g, ''));
		});
		
		$$('#total .result')[0].innerHTML = number_format(total, 2);
	};
	
	numFor = function(element, decimals){
		element.value = number_format(element.value.replace(/[^\d\.]/g, ''), decimals)
	};
	
	invNumFor = function(element){
		element.value = element.value.replace(/[^\d\.]/g, '')
	};
	
	contractJSON = function(){
	  contract = new Array;
	  $$('li.calculation').each(function(li){
	    line = new Hash;
	    line.set('label', li.select('.label')[0].value);
	    line.set('price', li.select('.price')[0].value.gsub(/[^\d\.]/, ''));
	    line.set('quantity', li.select('.quantity')[0].value.gsub(/[^\d\.]/, ''));
	    contract.push(line);
	  });
	  
	  return contract.toJSON();
	};
  
  <% if @contract %>
    <% @contract.restore.each do |line| %>
      addNewLine('<%= line["label"] %>', <%= line['price'] %>, <%= line['quantity'] %>);
    <% end %>
		recalculateTotalSum();
  <% else %>
  	addNewLine();
  <% end %>
</script>
